name: Publish Nuget Package

on:
  push:
    branches: [ main ]

env:
  PROJECT_NAME: Blazor.BrowserSize
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true


#delete package
#curl -X DELETE -H "Accept: application/vnd.github.v3+json" -u ${{ secrets.GITHUB_TOKEN }}:x-oauth-basic https://api.github.com/orgs/OctarinaCompany/packages/nuget/${{ env.PROJECT_NAME }}

jobs:
  build:
    name: Build and Push Package
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
        source-url: https://nuget.pkg.github.com/OctarinaCompany/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Version
      shell: pwsh
      run: |
        $previousVersion = "0.0.0"
        $json = curl -H "Accept: application/vnd.github.v3+json" -u ${{ secrets.GITHUB_TOKEN }}:x-oauth-basic https://api.github.com/repos/OctarinaCompany/${{ env.PROJECT_NAME }}/releases/latest | ConvertFrom-JSON
        
        if ($json.tag_name) {
          $previousVersion = $json.tag_name
        }
                
        $version = [int]($json.tag_name.Replace(".","")) + 1
        $version = [string]("{0:d3}" -f $version)
        $version = $version.Insert($version.length-1,".").Insert($version.length-2,".")

        echo "VERSION=$version" >> $Env:GITHUB_ENV

        Write-Host "previous : $previousVersion"
        Write-Host "current  : $version"

    - name: Restore
      run: dotnet restore ./${{ env.PROJECT_NAME }}

    - name: Build 
      run: dotnet build ./${{ env.PROJECT_NAME }} --configuration Release --no-restore -p:Version=${{ env.VERSION }}

    - name: Pack
      run: dotnet pack ./${{ env.PROJECT_NAME }} --configuration Release --no-restore -p:PackageVersion=${{ env.VERSION }}

    - name: Push package to github registry
      run: dotnet nuget push ./${{ env.PROJECT_NAME }}/bin/Release/*.nupkg --skip-duplicate --no-symbols --api-key ${{ secrets.GITHUB_TOKEN }}

    - name: Release notes and files
      uses: ncipollo/release-action@v1
      with:
        artifacts: "./${{ env.PROJECT_NAME }}/bin/Release/*.nupkg"
        tag: ${{ env.VERSION }}
        bodyFile: "release-notes.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        #prerelease: ${{ env.GitVersion_BranchName != 'main' }}
        #draft: ${{ contains(env.GitVersion_BranchName, 'feature') }}

    - uses: actions/upload-artifact@v2
      with:
        name: Nuget package
        path: ./${{ env.PROJECT_NAME }}/bin/Release/*.nupkg


