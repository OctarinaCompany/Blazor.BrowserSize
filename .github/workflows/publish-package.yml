name: Publish Nuget Package

on:
  push:
    branches: [ main ]

env:
  PROJECT_NAME: Blazor.BrowserSize
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true


jobs:
  build:
    name: Build and Push Package
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'

    - name: Version
      shell: pwsh
      run: |
        # get the latest version from nuget registry, increment it and store it to ${{ env.VERSION }}
        $json = (Invoke-WebRequest "https://api.nuget.org/v3-flatcontainer/octarina.browsersize/index.json").Content | ConvertFrom-Json
        if ($json.versions[0]) { $previousVersion = $json.versions[$json.versions.length-1] } else { $previousVersion = "0.0.0" }
        $version = ([int]($previousVersion.Replace(".","")) + 1).ToString("d3")
        $version = $version.Insert($version.length-1,".").Insert($version.length-2,".")
        echo "VERSION=$version" >> $Env:GITHUB_ENV
        Write-Host "$previousVersion -> $version"

    - name: Restore
      run: dotnet restore ./${{ env.PROJECT_NAME }}

    - name: Build 
      run: dotnet build ./${{ env.PROJECT_NAME }} --configuration Release --no-restore -p:Version=${{ env.VERSION }}

    - name: Pack
      run: dotnet pack ./${{ env.PROJECT_NAME }} --configuration Release --no-restore -p:PackageVersion=${{ env.VERSION }}

    # - name: Push package to github registry
    #   run: dotnet nuget push ./${{ env.PROJECT_NAME }}/bin/Release/*.nupkg --skip-duplicate --no-symbols --api-key ${{ secrets.GITHUB_TOKEN }}

    - name: Publish
      run: nuget push ./${{ env.PROJECT_NAME }}/bin/Release/*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_APIKEY}}

    - name: Release notes and artifacts
      uses: ncipollo/release-action@v1
      with:
        artifacts: "./${{ env.PROJECT_NAME }}/bin/Release/*.nupkg"
        tag: ${{ env.VERSION }}
        bodyFile: "release-notes.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        #prerelease: ${ GITHUB_REF##*/ != 'main' }
        #draft: ${{ contains('branch_name', 'feature') }}

    - uses: actions/upload-artifact@v2
      with:
        name: Nuget package
        path: ./${{ env.PROJECT_NAME }}/bin/Release/*.nupkg


