name: Publish Nuget Package

on:
  push:
    branches: [ main ]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build:
    name: Build and Push Package
    runs-on: ubuntu-20.04
    strategy:
          matrix:
            project: [Blazor.BrowserSize]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
        source-url: https://nuget.pkg.github.com/OctarinaCompany/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Restore
      run: dotnet restore ./${{ matrix.project }}

    - name: Build 
      run: dotnet build ./${{ matrix.project }} --configuration Release --no-restore -p:Version=1.2.4

    - name: Pack
      run: dotnet pack ./${{ matrix.project }} --configuration Release --no-restore -p:PackageVersion=1.2.4

    - name: Push package to github registry
      run: dotnet nuget push ./${{ matrix.project }}/bin/Release/*.nupkg --skip-duplicate --no-symbols --api-key ${{ secrets.GITHUB_TOKEN }}

    - name: Release notes and files
      uses: ncipollo/release-action@v1
      with:
        artifacts: "./${{ matrix.project }}/bin/Release/*.nupkg"
        tag: "1.2.4"
        bodyFile: "release-notes.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: ${{ env.GitVersion_BranchName != 'main' }}
        draft: ${{ contains(env.GitVersion_BranchName, 'feature') }}

    - uses: actions/upload-artifact@v2
      with:
        name: Nuget package
        path: ./${{ matrix.project }}/bin/Release/*.nupkg


